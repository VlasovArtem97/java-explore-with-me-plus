services:
  stats-db:
    image: postgres:16.1
    container_name: stats-db
    ports: ["6543:5432"]
    environment:
      - POSTGRES_DB=stat-server
      - POSTGRES_USER=stat
      - POSTGRES_PASSWORD=stat
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  ewm-db:
    image: postgres:16.1
    container_name: ewm-db
    ports: ["5443:5432"]
    environment:
      - POSTGRES_DB=ewm
      - POSTGRES_USER=ewm
      - POSTGRES_PASSWORD=ewm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  stats-server:
    build:
      context: ./stats-service/stats-server
    container_name: stats-server
    ports: ["9090:9090"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stats-db:5432/stat-server
      - SPRING_DATASOURCE_USERNAME=stat
      - SPRING_DATASOURCE_PASSWORD=stat
    depends_on:
      stats-db:
        condition: service_healthy
    healthcheck:
      # actuator есть в stats-server по зависимостям
      test: ["CMD-SHELL", "curl -fsS http://localhost:9090/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 15s

  ewm-service:
    build:
      context: ./main-service
    container_name: ewm-service
    ports: [ "8080:8080" ]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ewm-db:5432/ewm
      - SPRING_DATASOURCE_USERNAME=ewm
      - SPRING_DATASOURCE_PASSWORD=ewm
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - STATS_CLIENT=http://stats-server:9090
      - SPRING_MAIN_LAZY_INITIALIZATION=true
      - SPRING_SQL_INIT_MODE=never
      - SPRING_LIQUIBASE_ENABLED=false
      - SPRING_FLYWAY_ENABLED=false
      - JAVA_TOOL_OPTIONS=-XX:TieredStopAtLevel=1 -Xshare:on
    depends_on:
      ewm-db:
        condition: service_healthy
      stats-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/8080'" ]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 20s

